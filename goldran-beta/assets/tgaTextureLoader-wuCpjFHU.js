import{L as d}from"./Screen-CkuqfAyg.js";const R=1,U=2,L=3,N=9,O=10,Y=11,k=48,z=4,P=0,B=1,C=2,M=3;function G(i){let n=0;return{id_length:i[n++],colormap_type:i[n++],image_type:i[n++],colormap_index:i[n++]|i[n++]<<8,colormap_length:i[n++]|i[n++]<<8,colormap_size:i[n++],origin:[i[n++]|i[n++]<<8,i[n++]|i[n++]<<8],width:i[n++]|i[n++]<<8,height:i[n++]|i[n++]<<8,pixel_size:i[n++],flags:i[n++]}}function A(i,n){if(n.length<19){d.Error("Unable to load TGA file - Not enough data to contain header");return}let c=18;const r=G(n);if(r.id_length+c>n.length){d.Error("Unable to load TGA file - Not enough data");return}c+=r.id_length;let _=!1,f=!1,x=!1;switch(r.image_type){case N:_=!0;case R:f=!0;break;case O:_=!0;case U:break;case Y:_=!0;case L:x=!0;break}let p;const u=r.pixel_size>>3,l=r.width*r.height*u;let s;if(f&&(s=n.subarray(c,c+=r.colormap_length*(r.colormap_size>>3))),_){p=new Uint8Array(l);let I,m,w,b=0;const E=new Uint8Array(u);for(;c<l&&b<l;)if(I=n[c++],m=(I&127)+1,I&128){for(w=0;w<u;++w)E[w]=n[c++];for(w=0;w<m;++w)p.set(E,b+w*u);b+=u*m}else{for(m*=u,w=0;w<m;++w)p[b+w]=n[c++];b+=m}}else p=n.subarray(c,c+=f?r.width*r.height:l);let h,a,o,e,t,g;switch((r.flags&k)>>z){default:case C:h=0,o=1,g=r.width,a=0,e=1,t=r.height;break;case P:h=0,o=1,g=r.width,a=r.height-1,e=-1,t=-1;break;case M:h=r.width-1,o=-1,g=-1,a=0,e=1,t=r.height;break;case B:h=r.width-1,o=-1,g=-1,a=r.height-1,e=-1,t=-1;break}const y="_getImageData"+(x?"Grey":"")+r.pixel_size+"bits",D=K[y](r,s,p,a,e,t,h,o,g);i.getEngine()._uploadDataToTextureDirectly(i,D)}function S(i,n,c,r,_,f,x,p,u){const l=c,s=n,h=i.width,a=i.height;let o,e=0,t,g;const y=new Uint8Array(h*a*4);for(g=r;g!==f;g+=_)for(t=x;t!==u;t+=p,e++)o=l[e],y[(t+h*g)*4+3]=255,y[(t+h*g)*4+2]=s[o*3+0],y[(t+h*g)*4+1]=s[o*3+1],y[(t+h*g)*4+0]=s[o*3+2];return y}function j(i,n,c,r,_,f,x,p,u){const l=c,s=i.width,h=i.height;let a,o=0,e,t;const g=new Uint8Array(s*h*4);for(t=r;t!==f;t+=_)for(e=x;e!==u;e+=p,o+=2){a=l[o+0]+(l[o+1]<<8);const y=((a&31744)>>10)*255/31|0,D=((a&992)>>5)*255/31|0,T=(a&31)*255/31|0;g[(e+s*t)*4+0]=y,g[(e+s*t)*4+1]=D,g[(e+s*t)*4+2]=T,g[(e+s*t)*4+3]=a&32768?0:255}return g}function v(i,n,c,r,_,f,x,p,u){const l=c,s=i.width,h=i.height;let a=0,o,e;const t=new Uint8Array(s*h*4);for(e=r;e!==f;e+=_)for(o=x;o!==u;o+=p,a+=3)t[(o+s*e)*4+3]=255,t[(o+s*e)*4+2]=l[a+0],t[(o+s*e)*4+1]=l[a+1],t[(o+s*e)*4+0]=l[a+2];return t}function H(i,n,c,r,_,f,x,p,u){const l=c,s=i.width,h=i.height;let a=0,o,e;const t=new Uint8Array(s*h*4);for(e=r;e!==f;e+=_)for(o=x;o!==u;o+=p,a+=4)t[(o+s*e)*4+2]=l[a+0],t[(o+s*e)*4+1]=l[a+1],t[(o+s*e)*4+0]=l[a+2],t[(o+s*e)*4+3]=l[a+3];return t}function X(i,n,c,r,_,f,x,p,u){const l=c,s=i.width,h=i.height;let a,o=0,e,t;const g=new Uint8Array(s*h*4);for(t=r;t!==f;t+=_)for(e=x;e!==u;e+=p,o++)a=l[o],g[(e+s*t)*4+0]=a,g[(e+s*t)*4+1]=a,g[(e+s*t)*4+2]=a,g[(e+s*t)*4+3]=255;return g}function F(i,n,c,r,_,f,x,p,u){const l=c,s=i.width,h=i.height;let a=0,o,e;const t=new Uint8Array(s*h*4);for(e=r;e!==f;e+=_)for(o=x;o!==u;o+=p,a+=2)t[(o+s*e)*4+0]=l[a+0],t[(o+s*e)*4+1]=l[a+0],t[(o+s*e)*4+2]=l[a+0],t[(o+s*e)*4+3]=l[a+1];return t}const K={GetTGAHeader:G,UploadContent:A,_getImageData8bits:S,_getImageData16bits:j,_getImageData24bits:v,_getImageData32bits:H,_getImageDataGrey8bits:X,_getImageDataGrey16bits:F};class q{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(n,c,r){const _=new Uint8Array(n.buffer,n.byteOffset,n.byteLength),f=G(_);r(f.width,f.height,c.generateMipMaps,!1,()=>{A(c,_)})}}const Q=Object.freeze(Object.defineProperty({__proto__:null,_TGATextureLoader:q},Symbol.toStringTag,{value:"Module"}));export{G,K as T,A as U,q as _,Q as t};
